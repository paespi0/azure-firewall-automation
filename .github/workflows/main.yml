name: "Deploy Azure Firewall Policy Across Environments"

# Trigger the workflow on push events to the main branch and paths that include Terraform files
on:
  push:
    branches:
      - dev
      - test
      - prod
  # Other triggers if needed

    paths:
      - 'terraform/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Using a matrix strategy to run jobs across dev, test, and prod environments
    strategy:
      matrix:
        environment: [dev, test, prod]

    steps:
    # Check out the repository code
    - uses: actions/checkout@v2

    # Setup Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    
    # Set Azure Subnet ID based on environment
    - name: Set Azure Subnet ID for dev
      run: echo "TF_VAR_subnet_id=${{ secrets.AZURE_SUBNET_ID_DEV }}" >> $GITHUB_ENV
      if: matrix.environment == 'dev'
    - name: Set Azure Subnet ID for test
      run: echo "TF_VAR_subnet_id=${{ secrets.AZURE_SUBNET_ID_TEST }}" >> $GITHUB_ENV
      if: matrix.environment == 'test'
    - name: Set Azure Subnet ID for prod
      run: echo "TF_VAR_subnet_id=${{ secrets.AZURE_SUBNET_ID_PROD }}" >> $GITHUB_ENV
      if: matrix.environment == 'prod'
    
      # Create Terraform plan
    - name: Terraform Plan
      run: terraform plan -var-file="${{ matrix.environment }}.tfvars" -out=tfplan
      working-directory: ./terraform

    # Apply Terraform plan
    - name: Terraform Apply
      # Apply only on push to main and after manual approval for prod environment
      if: github.ref == 'refs/heads/main' && (matrix.environment != 'prod' || github.event.pull_request.merged == true)
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform
